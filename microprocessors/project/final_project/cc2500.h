/**
  * @file    cc2500.h
  * @author  
  * @date    30-March-2014
  * @version 
  * @brief   CC2500 wireless chipset driver method
  *          prototypes
  */
  
/* define to prevent recursive definition */
#ifndef __CC2500_H
#define __CC2500_H

/* includes */
#include "stm32f4xx_gpio.h"
#include "stm32f4xx_rcc.h"
#include "stm32f4xx_spi.h"

#define CC2500_SPI                       SPI2
#define CC2500_SPI_CLK                   RCC_APB1Periph_SPI2 

#define CC2500_SPI_INT_PIN               GPIO_Pin_11                  /* PB.11 */
#define CC2500_SPI_INT_GPIO_PORT         GPIOB                        /* GPIOB*/
#define CC2500_SPI_INT_GPIO_CLK          RCC_AHB1Periph_GPIOB

#define CC2500_SPI_NSS_PIN               GPIO_Pin_12                  /* PB.12 */
#define CC2500_SPI_NSS_GPIO_PORT         GPIOB                        /* GPIOB*/
#define CC2500_SPI_NSS_GPIO_CLK          RCC_AHB1Periph_GPIOB
#define CC2500_SPI_NSS_SOURCE            GPIO_PinSource12
#define CC2500_SPI_NSS_AF                GPIO_AF_SPI2

#define CC2500_SPI_SCK_PIN               GPIO_Pin_13                  /* PB.13 */
#define CC2500_SPI_SCK_GPIO_PORT         GPIOB                        /* GPIOB*/
#define CC2500_SPI_SCK_GPIO_CLK          RCC_AHB1Periph_GPIOB
#define CC2500_SPI_SCK_SOURCE            GPIO_PinSource13
#define CC2500_SPI_SCK_AF                GPIO_AF_SPI2

#define CC2500_SPI_MISO_PIN              GPIO_Pin_14                  /* PB.14 */
#define CC2500_SPI_MISO_GPIO_PORT        GPIOB                        /* GPIOB */
#define CC2500_SPI_MISO_GPIO_CLK         RCC_AHB1Periph_GPIOB
#define CC2500_SPI_MISO_SOURCE           GPIO_PinSource14
#define CC2500_SPI_MISO_AF               GPIO_AF_SPI2

#define CC2500_SPI_MOSI_PIN              GPIO_Pin_15                  /* PB.15 */
#define CC2500_SPI_MOSI_GPIO_PORT        GPIOB                        /* GPIOB */
#define CC2500_SPI_MOSI_GPIO_CLK         RCC_AHB1Periph_GPIOB
#define CC2500_SPI_MOSI_SOURCE           GPIO_PinSource15
#define CC2500_SPI_MOSI_AF               GPIO_AF_SPI2


/**********************************************************************************
*****************************  CC2500 REGISTER FILE  ******************************
**********************************************************************************/

/**********************************************************************************
                          *** CONFIGURATION REGISTERS ***
**********************************************************************************/

/**********************************************************************************
* IOCFG2 Register: GDO2 Output pin configuration
* Read Write Register
* Default Value : 0x29
* 7 RESERVED
* 6 GDO2_INV: Invert Output
*             1 = active low
*             0 = active high
* 5-0 GDO2_CFG:
**********************************************************************************/
#define CC2500_CFGREG_IOCFG2_ADDR ((uint8_t)0x00)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_IOFCG1_ADDR ((uint8_t)0x01)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_IOCFG0_ADDR ((uint8_t)0x02)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FIFOTHR_ADDR ((uint8_t)0x03)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_SYNC1_ADDR ((uint8_t)0x04)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_SYNC0_ADDR ((uint8_t)0x05)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_PKTLEN_ADDR ((uint8_t)0x06)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_PKTCTRL1_ADDR ((uint8_t)0x07)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_PKTCTRL0_ADDR ((uint8_t)0x08)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_ADDR_ADDR ((uint8_t)0x09)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_CHANNR_ADDR ((uint8_t)0x0A)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FSCTRL1_ADDR ((uint8_t)0x0B)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FSCTRL0_ADDR ((uint8_t)0x0C)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FREQ2_ADDR ((uint8_t)0x0D)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FREQ1_ADDR ((uint8_t)0x0E)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FREQ0_ADDR ((uint8_t)0x0F)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_MDMCFG4_ADDR ((uint8_t)0x10)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_MDMCFG3_ADDR ((uint8_t)0x11)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_MDMCFG2_ADDR ((uint8_t)0x12)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_MDMCFG1_ADDR ((uint8_t)0x13)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_MDMCFG0_ADDR ((uint8_t)0x14)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_DEVIATN_ADDR ((uint8_t)0x15)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_MCSM2_ADDR ((uint8_t)0x16)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_MCSM1_ADDR ((uint8_t)0x17)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_MCSM0_ADDR ((uint8_t)0x18)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FOCCFG_ADDR ((uint8_t)0x19)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_BSCFG_ADDR ((uint8_t)0x1A)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_AGCCTRL2_ADDR ((uint8_t)0x1B)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_AGCCTRL1_ADDR ((uint8_t)0x1C)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_AGCCTRL0_ADDR ((uint8_t)0x1D)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_WOREVT1_ADDR ((uint8_t)0x1E)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_WOREVT0_ADDR ((uint8_t)0x1F)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_WORCTRL_ADDR ((uint8_t)0x20)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FREND1_ADDR ((uint8_t)0x21)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FREND0_ADDR ((uint8_t)0x22)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FSCAL3_ADDR ((uint8_t)0x23)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FSCAL2_ADDR ((uint8_t)0x24)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FSCAL1_ADDR ((uint8_t)0x25)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FSCAL0_ADDR ((uint8_t)0x26)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_RCCTRL1_ADDR ((uint8_t)0x27)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_RCCTRL0_ADDR ((uint8_t)0x28)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_FSTEST_ADDR ((uint8_t)0x29)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_PTEST_ADDR ((uint8_t)0x2A)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_AGCTEST_ADDR ((uint8_t)0x2B)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_TEST2_ADDR ((uint8_t)0x2C)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_TEST1_ADDR ((uint8_t)0x2D)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_CFGREG_TEST0_ADDR ((uint8_t)0x2E)

#define IS_CC2500_CFGREG(CFGREG) (((CFGREG) == CC2500_CFGREG_IOCFG2_ADDR)   || ((CFGREG) == CC2500_CFGREG_IOFCG1_ADDR)          || \
                                  ((CFGREG) == CC2500_CFGREG_IOCFG0_ADDR)   || ((CFGREG) == CC2500_CFGREG_FIFOTHR_ADDR)         || \
                                  ((CFGREG) == CC2500_CFGREG_SYNC1_ADDR)    || ((CFGREG) == CC2500_CFGREG_SYNC0_ADDR)           || \
                                  ((CFGREG) == CC2500_CFGREG_PKTLEN_ADDR)   || ((CFGREG) == CC2500_CFGREG_PKTCTRL1_ADDR)        || \
                                  ((CFGREG) == CC2500_CFGREG_PKTCTRL0_ADDR) || ((CFGREG) == CC2500_CFGREG_ADDR_ADDR)            || \
                                  ((CFGREG) == CC2500_CFGREG_CHANNR_ADDR)   || ((CFGREG) == CC2500_CFGREG_FSCTRL1_ADDR)         || \
                                  ((CFGREG) == CC2500_CFGREG_FSCTRL0_ADDR)  || ((CFGREG) == CC2500_CFGREG_FREQ2_ADDR)           || \
                                  ((CFGREG) == CC2500_CFGREG_FREQ1_ADDR)    || ((CFGREG) == CC2500_CFGREG_FREQ0_ADDR)           || \
                                  ((CFGREG) == CC2500_CFGREG_MDMCFG4_ADDR)  || ((CFGREG) == CC2500_CFGREG_MDMCFG3_ADDR)         || \
                                  ((CFGREG) == CC2500_CFGREG_MDMCFG2_ADDR)  || ((CFGREG) == CC2500_CFGREG_MDMCFG1_ADDR)         || \
                                  ((CFGREG) == CC2500_CFGREG_MDMCFG0_ADDR)  || ((CFGREG) == CC2500_CFGREG_DEVIATN_ADDR)         || \
                                  ((CFGREG) == CC2500_CFGREG_MCSM2_ADDR)    || ((CFGREG) == CC2500_CFGREG_MCSM1_ADDR)           || \
                                  ((CFGREG) == CC2500_CFGREG_MCSM0_ADDR)    || ((CFGREG) == CC2500_CFGREG_FOCCFG_ADDR)          || \
                                  ((CFGREG) == CC2500_CFGREG_BSCFG_ADDR)    || ((CFGREG) == CC2500_CFGREG_AGCCTRL2_ADDR)        || \
                                  ((CFGREG) == CC2500_CFGREG_AGCCTRL1_ADDR) || ((CFGREG) == CC2500_CFGREG_CFGREG_AGCCTRL0_ADDR) || \
                                  ((CFGREG) == CC2500_CFGREG_WOREVT1_ADDR)  || ((CFGREG) == CC2500_CFGREG_WOREVT0_ADDR)         || \
                                  ((CFGREG) == CC2500_CFGREG_WORCTRL_ADDR)  || ((CFGREG) == CC2500_CFGREG_FREND1_ADDR)          || \
                                  ((CFGREG) == CC2500_CFGREG_FREND0_ADDR)   || ((CFGREG) == CC2500_CFGREG_FSCAL3_ADDR)          || \
                                  ((CFGREG) == CC2500_CFGREG_FSCAL2_ADDR)   || ((CFGREG) == CC2500_CFGREG_FSCAL1_ADDR)          || \
                                  ((CFGREG) == CC2500_CFGREG_FSCAL0_ADDR)   || ((CFGREG) == CC2500_CFGREG_RCCTRL1_ADDR)         || \
                                  ((CFGREG) == CC2500_CFGREG_RCCTRL0_ADDR)  || ((CFGREG) == CC2500_CFGREG_FSTEST_ADDR)          || \
                                  ((CFGREG) == CC2500_CFGREG_PTEST_ADDR)    || ((CFGREG) == CC2500_CFGREG_AGCTEST_ADDR)         || \
                                  ((CFGREG) == CC2500_CFGREG_TEST2_ADDR)    || ((CFGREG) == CC2500_CFGREG_TEST1_ADDR)           || \
                                  ((CFGREG) == CC2500_CFGREG_TEST0_ADDR))

/**********************************************************************************
                             *** STATUS REGISTERS ***
**********************************************************************************/

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_PARTNUM_ADDR ((uint8_t)0x30)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_VERSION_ADDR ((uint8_t)0x31)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_FREQEST_ADDR ((uint8_t)0x32)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_LQI_ADDR ((uint8_t)0x33)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_RSSI_ADDR ((uint8_t)0x34)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_MARCSTATE_ADDR ((uint8_t)0x35)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_WORTIME1_ADDR ((uint8_t)0x36)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_WORTIME0_ADDR ((uint8_t)0x37)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_PKTSTATUS_ADDR ((uint8_t)0x38)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_VCO_VC_DAC_ADDR ((uint8_t)0x39)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_TXBYTES_ADDR ((uint8_t)0x3A)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_RXBYTES_ADDR ((uint8_t)0x3B)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_RCCTRL1_STATUS_ADDR ((uint8_t)0x3C)

/**********************************************************************************
*
*
*
**********************************************************************************/
#define CC2500_STATUSREG_RCCTRL0_STATUS_ADDR ((uint8_t)0x3D)

#define IS_CC2500_STATUSREG(STATUSREG) (((STATUSREG) == CC2500_STATUSREG_PARTNUM_ADDR)        || ((STATUSREG) == CC2500_STATUSREG_VERSION_ADDR)       || \
                                        ((STATUSREG) == CC2500_STATUSREG_FREQEST_ADDR)        || ((STATUSREG) == CC2500_STATUSREG_LQI_ADDR)           || \
                                        ((STATUSREG) == CC2500_STATUSREG_RSSI_ADDR)           || ((STATUSREG) == CC2500_STATUSREG_MARCSTATE_ADDR)     || \
                                        ((STATUSREG) == CC2500_STATUSREG_WORTIME1_ADDR)       || ((STATUSREG) == CC2500_STATUSREG_WORTIME0_ADDR)      || \
                                        ((STATUSREG) == CC2500_STATUSREG_PKTSTATUS_ADDR)      || ((STATUSREG) == CC2500_STATUSREG_VCO_VC_DAC_ADDR)    || \
                                        ((STATUSREG) == CC2500_STATUSREG_TXBYTES_ADDR)        || ((STATUSREG) == CC2500_STATUSREG_RXBYTES_ADDR)       || \
                                        ((STATUSREG) == CC2500_STATUSREG_RCCTRL1_STATUS_ADDR) || ((STATUSREG) == CC2500_STATUSREG_RCCTRL0_STATUS_ADDR))

/**********************************************************************************
****************************  CC2500 COMMAND STROBES  *****************************
**********************************************************************************/
typedef enum {

/**********************************************************************************
* SRES: Reset chip
**********************************************************************************/
CC2500_CMDSTROBE_SRES = ((uint8_t)0x30),

/**********************************************************************************
* SFSTXON: Enable and calibrate frequency synthesizer 
*          (if MCSM0.FS_AUTOCAL=1). 
*          If in RX (with CCA):Go to a wait state where only
*                              the synthesizer is running 
*                              (for quick RX/TX turnaround)
**********************************************************************************/
CC2500_CMDSTROBE_SFSTXON = ((uint8_t)0x31),
  
/**********************************************************************************
* SXOFF: Turn off crystal oscillator
**********************************************************************************/
CC2500_CMDSTROBE_SXOFF = ((uint8_t)0x32),

/**********************************************************************************
* SCAL: Calibrate frequency synthesizer and turn it off
*       SCAL can be strobed from IDLE mode without
*       setting manual calibration mode (MCSM0.FS_AUTOCAL = 0) 
**********************************************************************************/  
CC2500_CMDSTROBE_SCAL = ((uint8_t)0x33),

/**********************************************************************************
* SRX: Enable RX
*      Perform calibration first if coming 
*      from IDLE and MCSM0.FS_AUTOCAL = 1 
**********************************************************************************/  
CC2500_CMDSTROBE_SRX = ((uint8_t)0x34),

/**********************************************************************************
* STX: -In IDLE state: Enable TX. Perform calibration first if MCSM0.FS_AUTOCAL = 1
*      -In RX state and CCA is enabled: Only go to TX if channel is clear
**********************************************************************************/
CC2500_CMDSTROBE_STX = ((uint8_t)0x35),

/**********************************************************************************
* SIDLE: Exit RX / TX turn off frequency synthesizer 
*        and exit Wake-On-Radio mode if applicable.
**********************************************************************************/
CC2500_CMDSTROBE_SIDLE = ((uint8_t)0x36),

/**********************************************************************************
* SWOR: Start automatic RX polling sequence 
*       (Wake-on-Radio) if WORCTRL.RC_PD = 0
**********************************************************************************/
CC2500_CMDSTROBE_SWOR = ((uint8_t)0x38),

/**********************************************************************************
* SPWD: Enter power down mode when CSn goes high
**********************************************************************************/
CC2500_CMDSTROBE_SPWD = ((uint8_t)0x39),

/**********************************************************************************
* SFRX Flush the RX FIFO buffer. Only issue SFRX in IDLE or RXFIFO_OVERFLOW states
**********************************************************************************/
CC2500_CMDSTROBE_SFRX = ((uint8_t)0x3A),

/**********************************************************************************
* SFTX Flush the TX FIFO buffer. Only issue SFTX in IDLE or TXFIFO_UNDERFLOW states
**********************************************************************************/
CC2500_CMDSTROBE_SFTX = ((uint8_t)0x3B),

/**********************************************************************************
* SWORRST: Reset real time clock to Event1 value
**********************************************************************************/
CC2500_CMDSTROBE_SWORRST = ((uint8_t)0x3C),

/**********************************************************************************
* SNOP: No operation
*       May be used to get access to the chip status byte
**********************************************************************************/
CC2500_CMDSTROBE_SNOP = ((uint8_t)0x3D)
} CommandStrobe;

typedef enum {TX = 0, RX = !TX} FIFOBuffer; 

/* exported methods */
void CC2500_Init(void);
void CC2500_ChipsetConfig(void);
void CC2500_Write(uint8_t* pBuffer, uint8_t WriteAddr, uint16_t NumByteToWrite);
void CC2500_Read(uint8_t* pBuffer, uint8_t ReadAddr, uint16_t NumByteToRead);
uint8_t CC2500_ReadStatusReg(uint8_t StatusAddr);
uint8_t CC2500_Strobe(CommandStrobe, FIFOBuffer);

#endif
